@startuml
class SQLiteLexer <<partial>> {
    + <<const>> SCOL : int = 1
    + <<const>> DOT : int = 2
    + <<const>> OPEN_PAR : int = 3
    + <<const>> CLOSE_PAR : int = 4
    + <<const>> COMMA : int = 5
    + <<const>> ASSIGN : int = 6
    + <<const>> STAR : int = 7
    + <<const>> PLUS : int = 8
    + <<const>> MINUS : int = 9
    + <<const>> TILDE : int = 10
    + <<const>> PIPE2 : int = 11
    + <<const>> DIV : int = 12
    + <<const>> MOD : int = 13
    + <<const>> LT2 : int = 14
    + <<const>> GT2 : int = 15
    + <<const>> AMP : int = 16
    + <<const>> PIPE : int = 17
    + <<const>> LT : int = 18
    + <<const>> LT_EQ : int = 19
    + <<const>> GT : int = 20
    + <<const>> GT_EQ : int = 21
    + <<const>> EQ : int = 22
    + <<const>> NOT_EQ1 : int = 23
    + <<const>> NOT_EQ2 : int = 24
    + <<const>> ABORT : int = 25
    + <<const>> ACTION : int = 26
    + <<const>> ADD : int = 27
    + <<const>> AFTER : int = 28
    + <<const>> ALL : int = 29
    + <<const>> ALTER : int = 30
    + <<const>> ANALYZE : int = 31
    + <<const>> AND : int = 32
    + <<const>> AS : int = 33
    + <<const>> ASC : int = 34
    + <<const>> ATTACH : int = 35
    + <<const>> AUTOINCREMENT : int = 36
    + <<const>> BEFORE : int = 37
    + <<const>> BEGIN : int = 38
    + <<const>> BETWEEN : int = 39
    + <<const>> BY : int = 40
    + <<const>> CASCADE : int = 41
    + <<const>> CASE : int = 42
    + <<const>> CAST : int = 43
    + <<const>> CHECK : int = 44
    + <<const>> COLLATE : int = 45
    + <<const>> COLUMN : int = 46
    + <<const>> COMMIT : int = 47
    + <<const>> CONFLICT : int = 48
    + <<const>> CONSTRAINT : int = 49
    + <<const>> CREATE : int = 50
    + <<const>> CROSS : int = 51
    + <<const>> CURRENT_DATE : int = 52
    + <<const>> CURRENT_TIME : int = 53
    + <<const>> CURRENT_TIMESTAMP : int = 54
    + <<const>> DATABASE : int = 55
    + <<const>> DEFAULT : int = 56
    + <<const>> DEFERRABLE : int = 57
    + <<const>> DEFERRED : int = 58
    + <<const>> DELETE : int = 59
    + <<const>> DESC : int = 60
    + <<const>> DETACH : int = 61
    + <<const>> DISTINCT : int = 62
    + <<const>> DROP : int = 63
    + <<const>> EACH : int = 64
    + <<const>> ELSE : int = 65
    + <<const>> END : int = 66
    + <<const>> ESCAPE : int = 67
    + <<const>> EXCEPT : int = 68
    + <<const>> EXCLUSIVE : int = 69
    + <<const>> EXISTS : int = 70
    + <<const>> EXPLAIN : int = 71
    + <<const>> FAIL : int = 72
    + <<const>> FOR : int = 73
    + <<const>> FOREIGN : int = 74
    + <<const>> FROM : int = 75
    + <<const>> FULL : int = 76
    + <<const>> GLOB : int = 77
    + <<const>> GROUP : int = 78
    + <<const>> HAVING : int = 79
    + <<const>> IF : int = 80
    + <<const>> IGNORE : int = 81
    + <<const>> IMMEDIATE : int = 82
    + <<const>> IN : int = 83
    + <<const>> INDEX : int = 84
    + <<const>> INDEXED : int = 85
    + <<const>> INITIALLY : int = 86
    + <<const>> INNER : int = 87
    + <<const>> INSERT : int = 88
    + <<const>> INSTEAD : int = 89
    + <<const>> INTERSECT : int = 90
    + <<const>> INTO : int = 91
    + <<const>> IS : int = 92
    + <<const>> ISNULL : int = 93
    + <<const>> JOIN : int = 94
    + <<const>> KEY : int = 95
    + <<const>> LEFT : int = 96
    + <<const>> LIKE : int = 97
    + <<const>> LIMIT : int = 98
    + <<const>> MATCH : int = 99
    + <<const>> NATURAL : int = 100
    + <<const>> NO : int = 101
    + <<const>> NOT : int = 102
    + <<const>> NOTNULL : int = 103
    + <<const>> NULL : int = 104
    + <<const>> OF : int = 105
    + <<const>> OFFSET : int = 106
    + <<const>> ON : int = 107
    + <<const>> OR : int = 108
    + <<const>> ORDER : int = 109
    + <<const>> OUTER : int = 110
    + <<const>> PLAN : int = 111
    + <<const>> PRAGMA : int = 112
    + <<const>> PRIMARY : int = 113
    + <<const>> QUERY : int = 114
    + <<const>> RAISE : int = 115
    + <<const>> RECURSIVE : int = 116
    + <<const>> REFERENCES : int = 117
    + <<const>> REGEXP : int = 118
    + <<const>> REINDEX : int = 119
    + <<const>> RELEASE : int = 120
    + <<const>> RENAME : int = 121
    + <<const>> REPLACE : int = 122
    + <<const>> RESTRICT : int = 123
    + <<const>> RETURNING : int = 124
    + <<const>> RIGHT : int = 125
    + <<const>> ROLLBACK : int = 126
    + <<const>> ROW : int = 127
    + <<const>> ROWS : int = 128
    + <<const>> SAVEPOINT : int = 129
    + <<const>> SELECT : int = 130
    + <<const>> SET : int = 131
    + <<const>> TABLE : int = 132
    + <<const>> TEMP : int = 133
    + <<const>> TEMPORARY : int = 134
    + <<const>> THEN : int = 135
    + <<const>> TO : int = 136
    + <<const>> TRANSACTION : int = 137
    + <<const>> TRIGGER : int = 138
    + <<const>> UNION : int = 139
    + <<const>> UNIQUE : int = 140
    + <<const>> UPDATE : int = 141
    + <<const>> USING : int = 142
    + <<const>> VACUUM : int = 143
    + <<const>> VALUES : int = 144
    + <<const>> VIEW : int = 145
    + <<const>> VIRTUAL : int = 146
    + <<const>> WHEN : int = 147
    + <<const>> WHERE : int = 148
    + <<const>> WITH : int = 149
    + <<const>> WITHOUT : int = 150
    + <<const>> FIRST_VALUE : int = 151
    + <<const>> OVER : int = 152
    + <<const>> PARTITION : int = 153
    + <<const>> RANGE : int = 154
    + <<const>> PRECEDING : int = 155
    + <<const>> UNBOUNDED : int = 156
    + <<const>> CURRENT : int = 157
    + <<const>> FOLLOWING : int = 158
    + <<const>> CUME_DIST : int = 159
    + <<const>> DENSE_RANK : int = 160
    + <<const>> LAG : int = 161
    + <<const>> LAST_VALUE : int = 162
    + <<const>> LEAD : int = 163
    + <<const>> NTH_VALUE : int = 164
    + <<const>> NTILE : int = 165
    + <<const>> PERCENT_RANK : int = 166
    + <<const>> RANK : int = 167
    + <<const>> ROW_NUMBER : int = 168
    + <<const>> GENERATED : int = 169
    + <<const>> ALWAYS : int = 170
    + <<const>> STORED : int = 171
    + <<const>> TRUE : int = 172
    + <<const>> FALSE : int = 173
    + <<const>> WINDOW : int = 174
    + <<const>> NULLS : int = 175
    + <<const>> FIRST : int = 176
    + <<const>> LAST : int = 177
    + <<const>> FILTER : int = 178
    + <<const>> GROUPS : int = 179
    + <<const>> EXCLUDE : int = 180
    + <<const>> TIES : int = 181
    + <<const>> OTHERS : int = 182
    + <<const>> DO : int = 183
    + <<const>> NOTHING : int = 184
    + <<const>> IDENTIFIER : int = 185
    + <<const>> NUMERIC_LITERAL : int = 186
    + <<const>> BIND_PARAMETER : int = 187
    + <<const>> STRING_LITERAL : int = 188
    + <<const>> BLOB_LITERAL : int = 189
    + <<const>> SINGLE_LINE_COMMENT : int = 190
    + <<const>> MULTILINE_COMMENT : int = 191
    + <<const>> SPACES : int = 192
    + <<const>> UNEXPECTED_CHAR : int = 193
    + SQLiteLexer(input:ICharStream)
    + SQLiteLexer(input:ICharStream, output:TextWriter, errorOutput:TextWriter)
    + <<override>> GrammarFileName : string <<get>>
    {static} SQLiteLexer()
}
Lexer <|-- SQLiteLexer
SQLiteLexer o-> "DefaultVocabulary" IVocabulary
SQLiteLexer --> "Vocabulary" IVocabulary
SQLiteLexer o-> "_ATN" ATN
@enduml
